/*!
  Theme Name: Wordism
  Author: Smoothism
  Author URI: http://smoothism.com/
  Description: Wordism, a WordPress starter theme for Smooth Developmentism
  Version: 1.0
  License: GNU General Public License v2 or later
  License URI: http://www.gnu.org/licenses/gpl-2.0.html
  Text Domain: wordism
  */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import url("https://fonts.googleapis.com/css?family=Open+Sans");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  font-family: 'Open Sans', sans-serif; }

.container {
  margin: 0 auto; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

.svg-container {
  display: inline-block;
  position: relative;
  height: 0;
  width: 100%;
  padding: 0;
  padding-bottom: 100%;
  vertical-align: middle;
  overflow: hidden; }

.svg-container-2x-height {
  padding-bottom: 200%; }

.svg {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0; }

.svg-defs {
  display: none; }

.navigation {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-pack: center;
      justify-content: center;
  z-index: 1000;
  top: 0;
  position: fixed;
  background: rgba(255, 255, 255, 0.5);
  width: 100%; }
  @media only screen and (min-width: 700px) {
    .navigation {
      -ms-flex-pack: distribute;
          justify-content: space-around; } }
  .navigation__logo {
    padding: 15px 15px 0 20px;
    width: 100%;
    text-align: right;
    background: white; }
    @media only screen and (min-width: 700px) {
      .navigation__logo {
        width: auto; } }
    .navigation__logo img {
      width: 150px;
      height: 43px; }
      @media only screen and (min-width: 500px) {
        .navigation__logo img {
          width: 175px;
          height: 50px; } }
      @media only screen and (min-width: 1000px) {
        .navigation__logo img {
          width: 200px;
          height: 57px; } }
  .navigation__button {
    position: absolute;
    top: 20px;
    left: 20px;
    width: 25px;
    height: 25px;
    cursor: pointer;
    z-index: 100;
    transition: opacity .25s ease;
    transition: margin 1s ease-in-out; }
    @media only screen and (min-width: 700px) {
      .navigation__button {
        display: none; } }
    .navigation__button--active .nav-button-top {
      transform: translateY(10px) translateX(0) rotate(45deg);
      background: #333; }
    .navigation__button--active .nav-button-middle {
      opacity: 0;
      background: #333; }
    .navigation__button--active .nav-button-bottom {
      transform: translateY(-10px) translateX(0) rotate(-45deg);
      background: #333; }
    .navigation__button span {
      background: #333;
      border: none;
      height: 3px;
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      transition: all .35s ease;
      cursor: pointer; }
      .navigation__button span:nth-of-type(2) {
        top: 10px; }
      .navigation__button span:nth-of-type(3) {
        top: 20px; }
  .navigation__container {
    width: 100%;
    z-index: -1;
    top: -190px;
    position: absolute;
    list-style: none;
    -ms-flex-item-align: center;
        align-self: center;
    transition: all 1s ease-in-out;
    background: white;
    border-bottom: 1px solid black;
    background: white;
    padding-bottom: 25px; }
    .navigation__container--open {
      top: 50px !important; }
      @media only screen and (min-width: 700px) {
        .navigation__container--open {
          top: auto !important; } }
    @media only screen and (min-width: 700px) {
      .navigation__container {
        top: 0;
        position: relative;
        border-bottom: none;
        padding-bottom: 0;
        height: 70px;
        line-height: 70px; } }
    @media only screen and (min-width: 1000px) {
      .navigation__container {
        height: 77px; } }
    .navigation__container ul {
      list-style: none;
      padding: 0; }
      @media only screen and (min-width: 700px) {
        .navigation__container ul {
          margin: 5px 0 0 0; } }
      .navigation__container ul li {
        width: 100%;
        text-align: left;
        margin: 0 0 0 20px;
        height: 25px; }
        @media only screen and (min-width: 700px) {
          .navigation__container ul li {
            display: inline-block;
            width: auto; } }
        .navigation__container ul li a {
          text-decoration: none;
          font-size: 14px;
          color: #333;
          letter-spacing: 0.05em;
          cursor: pointer;
          -webkit-backface-visibility: hidden;
          position: relative;
          padding-bottom: 1px; }
          .navigation__container ul li a:before {
            background-color: #333;
            content: "";
            height: 1px;
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            transform: scaleX(0);
            transition: all 0.3s ease-in-out 0s; }
          .navigation__container ul li a:hover:before {
            transform: scaleX(1); }
          .navigation__container ul li a:hover {
            color: #000; }
          @media only screen and (min-width: 700px) {
            .navigation__container ul li a {
              font-size: 13px;
              margin: 0;
              padding-bottom: 3px; } }
          @media only screen and (min-width: 1000px) {
            .navigation__container ul li a {
              font-size: 18px;
              margin: 0 0 0 10px;
              padding-bottom: 5px; } }
  .navigation__mobile {
    display: block; }
    @media only screen and (min-width: 700px) {
      .navigation__mobile {
        display: none; } }
    .navigation__mobile--line {
      width: 50px;
      height: 1px;
      background: #999;
      margin: 0 0 0 20px; }
    .navigation__mobile--form-title {
      font-size: 12px;
      font-weight: 200;
      margin: 15px 0 10px 20px;
      padding: 0;
      color: #666; }
    .navigation__mobile--email-form {
      width: 90%;
      margin: 0 5%;
      padding: 0;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: row;
          flex-direction: row; }
    .navigation__mobile--enter-email {
      width: 75%;
      background: url(img/mail-icon.png) no-repeat 7px 5px;
      padding-left: 37px;
      box-shadow: none;
      border: 1px solid #333;
      margin-right: 10px; }
    .navigation__mobile--signup-button {
      width: 25%;
      background: white;
      border: 1px solid #333;
      box-shadow: none;
      font-size: 12px; }
      .navigation__mobile--signup-button:hover {
        background: #666;
        color: white; }

.site-wrapper {
  margin-top: 0;
  transition: all 1s ease-in-out;
  position: relative;
  display: block;
  width: 100%; }

.site-wrapper-open {
  margin-top: 240px; }

.artists_wrap {
  width: 100%;
  margin: 0 auto;
  padding: 100px 5% 500px;
  overflow: hidden; }

.art_wrapper {
  max-width: 300px;
  float: left;
  margin: 20px; }

.art_name {
  font-size: 16px;
  color: #333; }

.image {
  max-width: 300px; }
  .image img {
    width: 100%;
    height: 100%; }

/*# sourceMappingURL=data:application/json;base64, */
